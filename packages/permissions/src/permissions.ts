/**
 * Permission constants and helpers
 */

import { PERMISSION_ACTION, PERMISSION_RESOURCE, PERMISSION_SCOPE, buildPermission } from '@big0290/shared'

/**
 * All available permissions
 * Format: action:scope:resource
 */
export const PERMISSIONS = {
  // User permissions
  USER_READ_ANY: buildPermission(PERMISSION_ACTION.READ, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.USER),
  USER_READ_OWN: buildPermission(PERMISSION_ACTION.READ, PERMISSION_SCOPE.OWN, PERMISSION_RESOURCE.USER),
  USER_CREATE_ANY: buildPermission(PERMISSION_ACTION.CREATE, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.USER),
  USER_UPDATE_ANY: buildPermission(PERMISSION_ACTION.UPDATE, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.USER),
  USER_UPDATE_OWN: buildPermission(PERMISSION_ACTION.UPDATE, PERMISSION_SCOPE.OWN, PERMISSION_RESOURCE.USER),
  USER_DELETE_ANY: buildPermission(PERMISSION_ACTION.DELETE, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.USER),

  // Role permissions
  ROLE_READ_ANY: buildPermission(PERMISSION_ACTION.READ, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.ROLE),
  ROLE_CREATE_ANY: buildPermission(PERMISSION_ACTION.CREATE, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.ROLE),
  ROLE_UPDATE_ANY: buildPermission(PERMISSION_ACTION.UPDATE, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.ROLE),
  ROLE_DELETE_ANY: buildPermission(PERMISSION_ACTION.DELETE, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.ROLE),

  // Email permissions
  EMAIL_READ_ANY: buildPermission(PERMISSION_ACTION.READ, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.EMAIL),
  EMAIL_CREATE_ANY: buildPermission(PERMISSION_ACTION.CREATE, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.EMAIL),

  // Template permissions
  TEMPLATE_READ_ANY: buildPermission(PERMISSION_ACTION.READ, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.TEMPLATE),
  TEMPLATE_CREATE_ANY: buildPermission(PERMISSION_ACTION.CREATE, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.TEMPLATE),
  TEMPLATE_UPDATE_ANY: buildPermission(PERMISSION_ACTION.UPDATE, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.TEMPLATE),
  TEMPLATE_DELETE_ANY: buildPermission(PERMISSION_ACTION.DELETE, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.TEMPLATE),

  // Audit log permissions
  AUDIT_LOG_READ_ANY: buildPermission(PERMISSION_ACTION.READ, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.AUDIT_LOG),
  AUDIT_LOG_READ_OWN: buildPermission(PERMISSION_ACTION.READ, PERMISSION_SCOPE.OWN, PERMISSION_RESOURCE.AUDIT_LOG),

  // System permissions
  SYSTEM_MANAGE: buildPermission(PERMISSION_ACTION.UPDATE, PERMISSION_SCOPE.ANY, PERMISSION_RESOURCE.SYSTEM),
} as const

/**
 * Permission descriptions for UI
 */
export const PERMISSION_DESCRIPTIONS: Record<string, string> = {
  [PERMISSIONS.USER_READ_ANY]: 'View any user profile',
  [PERMISSIONS.USER_READ_OWN]: 'View own profile',
  [PERMISSIONS.USER_CREATE_ANY]: 'Create new users',
  [PERMISSIONS.USER_UPDATE_ANY]: 'Update any user',
  [PERMISSIONS.USER_UPDATE_OWN]: 'Update own profile',
  [PERMISSIONS.USER_DELETE_ANY]: 'Delete any user',

  [PERMISSIONS.ROLE_READ_ANY]: 'View all roles',
  [PERMISSIONS.ROLE_CREATE_ANY]: 'Create new roles',
  [PERMISSIONS.ROLE_UPDATE_ANY]: 'Update roles',
  [PERMISSIONS.ROLE_DELETE_ANY]: 'Delete roles',

  [PERMISSIONS.EMAIL_READ_ANY]: 'View all emails',
  [PERMISSIONS.EMAIL_CREATE_ANY]: 'Send emails',

  [PERMISSIONS.TEMPLATE_READ_ANY]: 'View all templates',
  [PERMISSIONS.TEMPLATE_CREATE_ANY]: 'Create new templates',
  [PERMISSIONS.TEMPLATE_UPDATE_ANY]: 'Update templates',
  [PERMISSIONS.TEMPLATE_DELETE_ANY]: 'Delete templates',

  [PERMISSIONS.AUDIT_LOG_READ_ANY]: 'View all audit logs',
  [PERMISSIONS.AUDIT_LOG_READ_OWN]: 'View own audit logs',

  [PERMISSIONS.SYSTEM_MANAGE]: 'Manage system settings',
}

/**
 * Group permissions by domain
 */
export const PERMISSION_GROUPS = {
  user: [
    PERMISSIONS.USER_READ_ANY,
    PERMISSIONS.USER_READ_OWN,
    PERMISSIONS.USER_CREATE_ANY,
    PERMISSIONS.USER_UPDATE_ANY,
    PERMISSIONS.USER_UPDATE_OWN,
    PERMISSIONS.USER_DELETE_ANY,
  ],
  role: [
    PERMISSIONS.ROLE_READ_ANY,
    PERMISSIONS.ROLE_CREATE_ANY,
    PERMISSIONS.ROLE_UPDATE_ANY,
    PERMISSIONS.ROLE_DELETE_ANY,
  ],
  email: [PERMISSIONS.EMAIL_READ_ANY, PERMISSIONS.EMAIL_CREATE_ANY],
  template: [
    PERMISSIONS.TEMPLATE_READ_ANY,
    PERMISSIONS.TEMPLATE_CREATE_ANY,
    PERMISSIONS.TEMPLATE_UPDATE_ANY,
    PERMISSIONS.TEMPLATE_DELETE_ANY,
  ],
  audit: [PERMISSIONS.AUDIT_LOG_READ_ANY, PERMISSIONS.AUDIT_LOG_READ_OWN],
  system: [PERMISSIONS.SYSTEM_MANAGE],
} as const

/**
 * Wildcard permission (super admin)
 */
export const WILDCARD_PERMISSION = '*:*:*'

/**
 * Check if permission is wildcard
 */
export function isWildcardPermission(permission: string): boolean {
  return permission === WILDCARD_PERMISSION
}
